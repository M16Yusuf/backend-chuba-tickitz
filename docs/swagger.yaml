definitions:
  models.Auth:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  models.ErrorResponse:
    properties:
      code:
        type: integer
      error:
        example: Error message...
        type: string
      is_success:
        type: boolean
    type: object
  models.Genre:
    properties:
      genre_id:
        type: integer
      genre_name:
        type: string
    type: object
  models.MovieList:
    properties:
      backdrop_path:
        type: string
      director_id:
        type: integer
      duration:
        type: integer
      genres:
        items:
          $ref: '#/definitions/models.Genre'
        type: array
      movie_id:
        type: integer
      overview:
        type: string
      poster_path:
        type: string
      release_date:
        type: string
      title:
        type: string
    type: object
  models.MoviesResponse:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/models.MovieList'
        type: array
      is_success:
        type: boolean
      page:
        type: integer
    type: object
  models.ProfileResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/models.User'
      is_success:
        type: boolean
    type: object
  models.TokenResponse:
    properties:
      code:
        type: integer
      is_success:
        type: boolean
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Miwicm9sZSI6ImFkbWluIiwiZXhwIjoxNzU3MDM4NjQyfQ.J2MAUbAZvFpQl18BkSSyZOSMnbZxPziyZ6q6Bsuj8GU
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      point:
        type: integer
      profile_path:
        type: string
      role:
        type: string
      user_id:
        type: integer
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: Ticketing application with restful API powered by gin
  title: CHUBA TICKITZ
  version: "1.0"
paths:
  /{any}:
    get:
      description: if route not found, send 404 statusNotfound as response
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - NoRoute
  /auth:
    post:
      consumes:
      - application/json
      description: login using email and password and return as response with JWT
        token
      parameters:
      - description: Input email and password
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Auth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - login
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register new user input email and password and return new data
        users
      parameters:
      - description: Input email and password new user
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Auth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - Register
  /movies/upcoming:
    get:
      description: Get upcomes movies, filter movies that not aired yet
      parameters:
      - description: opsional query for pagination
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MoviesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      tags:
      - movie
swagger: "2.0"
